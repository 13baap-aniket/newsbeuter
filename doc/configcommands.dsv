auto-reload|[yes/no]|no|If enabled, all feeds will be automatically reloaded at start up and then continuously after a certain time has passed (see reload-time).|auto-reload yes
bind-key|<key> <operation>|n/a|Bind key <key> to <operation>. This means that whenever <key> is pressed, then <operation> is executed (if applicable in the current context). A list of available operations can be found below.|bind-key ^R reload-all
bookmark-cmd|<command>|""|If set, the configured command will be used as bookmark plugin. Please refer to the documentation for further information on bookmark plugins.|bookmark-cmd "~/bin/my-bookmark-plugin.sh"
bloglines-auth|<login>:<password>|""|Set the Bloglines username and password. This is necessary for the Bloglines synchronization mode.|bloglines-auth "username@emailaddress.com:mypassword"
bloglines-mark-read|[yes/no]|no|If set to yes, it will mark all articles that are downloaded from Bloglines as read.|bloglines-mark-read yes
bookmark-cmd|<bookmark-command>|""|If set, then <bookmark-command> will be used as bookmarking plugin. See the documentation on bookmarking for further information.|bookmark-cmd "~/bin/delicious-bookmark.sh"
browser|<browser-command>|lynx|Set the browser command to use when opening an article in the browser.|browser w3m
cache-file|<path>|"~/.newsbeuter/cache.db"|This configuration option sets the cache file. This is especially useful if the filesystem of your home directory doesn't support proper locking (e.g. NFS).|cache-file "/tmp/testcache.db"
cleanup-on-quit|[yes/no]|yes|If yes, then the cache gets locked and superfluous feeds and items are removed, such as feeds that can't be found in the urls configuration file anymore.|cleanup-on-quit no
color|<element> <fgcolor> <bgcolor> [<attr> ...]|n/a|Set the foreground color, background color and optional attributes for a certain element|color background white black
confirm-exit|[yes/no]|no|If set to yes, then newsbeuter will ask for confirmation whether the user really wants to quit newsbeuter.|confirm-exit yes
datetime-format|<date/time format>|%b %d|This format specifies the date/time format in the article list. For a detailed documentation on the allowed formats, consult the manpage of strftime(3).|datetime-format "%D, %R"
define-filter|<name> <filter>|n/a|With this command, you can predefine filters, which can you later select from a list, and which are then applied after selection. This is especially useful for filters that you need often and you don't want to enter them every time you need them.|define-filter "all feeds with 'fun' tag" "tags # \\"fun\\""
error-log|<path>|""|If set, then user errors (e.g. errors regarding defunct RSS feeds) will be logged to this file.|error-log "~/.newsbeuter/error.log"
html-renderer|<path>|internal|If set to "internal", then the internal HTML renderer will be used. Otherwise, the specified command will be executed, the HTML to be rendered will be written to the command's stdin, and the program's output will be displayed. This makes it possible to use other, external programs, such as w3m, links or lynx, to render HTML.|html-renderer "w3m -dump -T text/html"
ignore-article|<feed> <filterexpr>|n/a|If a downloaded article from <feed> matches <filterexpr>, then it is ignored and not presented to the user. This command is further explained in the "kill file" section below.|ignore-article "*" "title =~ \\"Windows\\""
include|<path>|n/a|With this command, you can include other files to be interpreted as configuration files. This is especially useful to separate your configuration into several files, e.g. key configuration, color configuration, ...|include "~/.newsbeuter/colors"
max-items|<number>|0|Set the number of articles to maximally keep per feed. If the number is set to 0, then all articles are kept.|max-items 100
notify-program|<path>|""|If set, then the configured program will be executed if new articles arrived (through a reload). The first parameter of the called program contains the notification message.|notify-program "~/bin/my-notifier"
notify-screen|[yes/no]|no|If yes, then a "privacy message" will be sent to the terminal, containing a notification message about new articles. This is especially useful if you use terminal emulations such as GNU screen which implement privacy messages.|notify-screen yes
notify-xterm|[yes/no]|no|If yes, then the xterm window title will be set to a notification message about new articles.|notify-xterm yes
podcast-auto-enqueue|[yes/no]|no|If yes, then all podcast URLs that are found in articles are added to the podcast download queue. See below for more information on podcast support in newsbeuter.|podcast-auto-enqueue yes
opml-url|<url>|""|If the OPML online subscription mode is enabled, then the list of feeds will be taken from the OPML file found on this location.|opml-url "http://host.domain.tld/blogroll.opml"
proxy|<server:port>|n/a|Set the proxy to use for downloading RSS feeds.|proxy localhost:3128
proxy-auth|<auth>|n/a|Set the proxy authentication string.|proxy-auth user:password
refresh-on-startup|[yes/no]|no|If yes, then all feeds will be reloaded when newsbeuter starts up. This is equivalent to the -r commandline option.|refresh-on-startup yes
reload-time|<number>|30|The number of minutes between automatic reloads.|reload-time 60
save-path|<path>|~/|The default path where articles shall be saved to. If an invalid path is specified, the current directory is used.|save-path "~/Saved Articles"
show-read-feeds|[yes/no]|yes|If yes, then all feeds, including those without unread articles, are listed. If no, then only feeds with one or more unread articles are list.|show-read-feeds no
suppress-first-reload|[yes/no]|no|If yes, then the first automatic reload will be suppressed if auto-reload is set to yes.|suppress-first-reload yes
unbind-key|<key>|n/a|Unbind key <key>. This means that no operation is called when <key> is pressed.|unbind-key R
urls-source|<source>|"local"|This configuration command sets the source where URLs shall be retrieved from. By default, this is ~/.newsbeuter/urls. Alternatively, you can set it to "bloglines", which enables newsbeuter's Bloglines synchronization mode, or to "opml", which enables newsbeuter's OPML online subscription mode.|urls-source "bloglines"
use-proxy|[yes/no]|no|If yes, then the configured proxy will be used for downloading the RSS feeds.|use-proxy yes
user-agent|<user agent string>|""|If set to a non-zero-length string, this value will be used as HTTP User-Agent header for all HTTP requests.|user-agent "Lynx/2.8.5rel.1 libwww-FM/2.14"
